import moment from "moment-timezone";

// Constantes sp√©cifiques au Cameroun
export const CAMEROON_TIMEZONE = 'Africa/Douala';
export const CAMEROON_CURRENCY = 'FCFA';
export const CAMEROON_COUNTRY_CODE = 'CM';

// R√©gions du Cameroun
export const CAMEROON_REGIONS = [
  'Adamaoua',
  'Centre',
  'Est',
  'Extr√™me-Nord',
  'Littoral',
  'Nord',
  'Nord-Ouest',
  'Ouest',
  'Sud',
  'Sud-Ouest'
];

// Principales villes du Cameroun
export const CAMEROON_CITIES = [
  'Yaound√©',
  'Douala', 
  'Garoua',
  'Kousseri',
  'Bamenda',
  'Maroua',
  'Bafoussam',
  'Mokolo',
  'Ngaound√©r√©',
  'Bertoua',
  'Loum',
  'Kumba',
  'Nkongsamba',
  'Mbouda',
  'Dschang',
  'Foumban',
  'Ebolowa',
  'Kribi',
  'Tiko',
  'Mbalmayo'
];

// Services de paiement mobile populaires au Cameroun
export const MOBILE_MONEY_PROVIDERS = [
  'Orange Money',
  'MTN Mobile Money',
  'Express Union Mobile',
  'UBA Mobile Banking'
];

// Expressions camerounaises populaires pour l'interface
export const CAMEROON_EXPRESSIONS = {
  fr: {
    welcome: "Bienvenue mon fr√®re ! üá®üá≤",
    loading: "√áa charge l√†...",
    error: "A√Øe a√Øe, il y a un souci !",
    success: "C'est bon maintenant !",
    empty: "Rien du tout ici...",
    refresh: "Actualiser √ßa",
    search: "Chercher √ßa",
    filter: "Filtrer les trucs",
    export: "T√©l√©charger √ßa",
    delete: "Supprimer √ßa",
    edit: "Modifier √ßa",
    save: "Enregistrer √ßa",
    cancel: "Laisser tomber",
    retry: "Ressayer encore"
  },
  en: {
    welcome: "Welcome my brother! üá®üá≤",
    loading: "Loading...",
    error: "A√Øe a√Øe, there's a problem!",
    success: "It's good now!",
    empty: "Nothing here...",
    refresh: "Refresh this",
    search: "Search this",
    filter: "Filter things",
    export: "Download this",
    delete: "Delete this",
    edit: "Edit this",
    save: "Save this",
    cancel: "Cancel",
    retry: "Try again"
  }
};

// Utilitaires pour les heures camerounaises
export class CameroonTimeUtils {
  
  // Obtenir l'heure actuelle au Cameroun
  static now(): moment.Moment {
    return moment().tz(CAMEROON_TIMEZONE);
  }
  
  // Formater une date en heure locale camerounaise
  static format(date: string | Date, format: string = 'DD/MM/YYYY HH:mm'): string {
    return moment(date).tz(CAMEROON_TIMEZONE).format(format);
  }
  
  // Obtenir le d√©but de la journ√©e (00:00) en heure camerounaise
  static startOfDay(date?: string | Date): string {
    const target = date ? moment(date) : moment();
    return target.tz(CAMEROON_TIMEZONE).startOf('day').format();
  }
  
  // Obtenir la fin de la journ√©e (23:59) en heure camerounaise
  static endOfDay(date?: string | Date): string {
    const target = date ? moment(date) : moment();
    return target.tz(CAMEROON_TIMEZONE).endOf('day').format();
  }
  
  // V√©rifier si c'est les heures de bureau (8h-18h)
  static isBusinessHours(date?: string | Date): boolean {
    const target = date ? moment(date) : moment();
    const hour = target.tz(CAMEROON_TIMEZONE).hour();
    return hour >= 8 && hour < 18;
  }
  
  // Formater en style camerounais (ex: "Hier 14h30", "Maintenant", etc.)
  static humanize(date: string | Date): string {
    const target = moment(date).tz(CAMEROON_TIMEZONE);
    const now = moment().tz(CAMEROON_TIMEZONE);
    
    const diffMinutes = now.diff(target, 'minutes');
    const diffHours = now.diff(target, 'hours');
    const diffDays = now.diff(target, 'days');
    
    if (diffMinutes < 1) return "Maintenant";
    if (diffMinutes < 60) return `Il y a ${diffMinutes} min`;
    if (diffHours < 24) return `Il y a ${diffHours}h`;
    if (diffDays === 1) return `Hier √† ${target.format('HH:mm')}`;
    if (diffDays < 7) return `${target.format('dddd √† HH:mm')}`;
    
    return target.format('DD/MM/YYYY √† HH:mm');
  }
}

// Utilitaires pour la monnaie FCFA
export class CameroonCurrencyUtils {
  
  // Formater un montant en FCFA
  static formatAmount(amount: number, showCurrency: boolean = true): string {
    const formatted = new Intl.NumberFormat('fr-CM', {
      minimumFractionDigits: 0,
      maximumFractionDigits: 0
    }).format(amount);
    
    return showCurrency ? `${formatted} FCFA` : formatted;
  }
  
  // D√©tecter si un montant est en FCFA dans un texte
  static detectFCFA(text: string): boolean {
    return /\b\d+[\s,.]*(FCFA|CFA|F\s*CFA)\b/i.test(text);
  }
  
  // Extraire les montants en FCFA d'un texte
  static extractAmounts(text: string): number[] {
    const regex = /(\d+(?:[\s,.]\d+)*)\s*(FCFA|CFA|F\s*CFA)/gi;
    const matches = text.matchAll(regex);
    
    return Array.from(matches).map(match => {
      return parseInt(match[1].replace(/[\s,.]/g, ''));
    });
  }
}

// D√©tection des services de paiement mobile
export class MobileMoneyDetector {
  
  // D√©tecter le type de paiement mobile √† partir du payload
  static detectProvider(payload: any): string | null {
    const payloadString = JSON.stringify(payload).toLowerCase();
    
    if (payloadString.includes('orange') || payloadString.includes('#150*1#')) {
      return 'Orange Money';
    }
    
    if (payloadString.includes('mtn') || payloadString.includes('momo') || payloadString.includes('#126#')) {
      return 'MTN Mobile Money';
    }
    
    if (payloadString.includes('express union') || payloadString.includes('eu mobile')) {
      return 'Express Union Mobile';
    }
    
    if (payloadString.includes('uba') && payloadString.includes('mobile')) {
      return 'UBA Mobile Banking';
    }
    
    return null;
  }
  
  // Valider un num√©ro de t√©l√©phone camerounais
  static validatePhoneNumber(phone: string): boolean {
    // Formats accept√©s pour le Cameroun
    // +237XXXXXXXX, 237XXXXXXXX, 6XXXXXXXX, 7XXXXXXXX
    const patterns = [
      /^\+237[67]\d{8}$/,  // +237 6/7 + 8 chiffres
      /^237[67]\d{8}$/,    // 237 6/7 + 8 chiffres  
      /^[67]\d{8}$/        // 6/7 + 8 chiffres
    ];
    
    return patterns.some(pattern => pattern.test(phone.replace(/\s/g, '')));
  }
}

// Utilitaires pour les produits camerounais
export class CameroonProductUtils {
  
  // Produits typiquement camerounais
  static readonly TYPICAL_PRODUCTS = [
    'ndol√©', 'eru', 'koki', 'bobolo', 'b√¢ton de manioc',
    'plantain', 'macabo', 'taro', 'igname', 'arachide',
    'cacao', 'caf√©', 'banane', 'avocat', 'mangue',
    'piment', 'gingembre', 'curcuma', 'poivre blanc',
    'bi√®re camerounaise', '33 export', 'mutzig', 'castel',
    'huile rouge', 'huile de palme', 'beurre de karit√©'
  ];
  
  // D√©tecter si un produit est typiquement camerounais
  static isTypicalProduct(productName: string): boolean {
    const name = productName.toLowerCase();
    return this.TYPICAL_PRODUCTS.some(product => 
      name.includes(product) || product.includes(name)
    );
  }
  
  // Sugg√©rer des cat√©gories pour des produits camerounais
  static suggestCategory(productName: string): string {
    const name = productName.toLowerCase();
    
    if (['ndol√©', 'eru', 'koki'].some(p => name.includes(p))) {
      return 'Plats traditionnels';
    }
    
    if (['plantain', 'macabo', 'taro', 'igname', 'bobolo'].some(p => name.includes(p))) {
      return 'Tubercules et f√©culents';
    }
    
    if (['cacao', 'caf√©', 'arachide'].some(p => name.includes(p))) {
      return 'Produits d\'exportation';
    }
    
    if (['33', 'mutzig', 'castel', 'bi√®re'].some(p => name.includes(p))) {
      return 'Boissons';
    }
    
    if (['huile', 'karit√©'].some(p => name.includes(p))) {
      return 'Huiles et cosm√©tiques';
    }
    
    return 'G√©n√©ral';
  }
}